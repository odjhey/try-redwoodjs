diff --git a/node_modules/@redwoodjs/internal/dist/generate/typeDefinitions.js b/node_modules/@redwoodjs/internal/dist/generate/typeDefinitions.js
index 581f1ad..e9e6b54 100644
--- a/node_modules/@redwoodjs/internal/dist/generate/typeDefinitions.js
+++ b/node_modules/@redwoodjs/internal/dist/generate/typeDefinitions.js
@@ -258,7 +258,7 @@ const generateTypeDefGraphQLWeb = async () => {
   try {
     const f = await runCodegenGraphQL({
       [_path.default.join(rwjsPaths.web.types, 'graphql.d.ts')]: {
-        documents: './web/src/**/!(*.d).{ts,tsx,js,jsx}',
+        documents: _path.default.join(rwjsPaths.web.base, 'src/**/!(*.d).{ts,tsx,js,jsx}'),
         plugins: [{
           typescript: {
             enumsAsTypes: true
diff --git a/node_modules/@redwoodjs/internal/dist/paths.js b/node_modules/@redwoodjs/internal/dist/paths.js
index f2220c7..70024d9 100644
--- a/node_modules/@redwoodjs/internal/dist/paths.js
+++ b/node_modules/@redwoodjs/internal/dist/paths.js
@@ -38,23 +38,23 @@ const PATH_API_DIR_GENERATORS = 'api/generators';
 const PATH_API_DIR_SERVICES = 'api/src/services';
 const PATH_API_DIR_DIRECTIVES = 'api/src/directives';
 const PATH_API_DIR_SRC = 'api/src';
-const PATH_WEB_ROUTES = 'web/src/Routes'; // .js|.tsx
-
-const PATH_WEB_DIR_LAYOUTS = 'web/src/layouts/';
-const PATH_WEB_DIR_PAGES = 'web/src/pages/';
-const PATH_WEB_DIR_COMPONENTS = 'web/src/components';
-const PATH_WEB_DIR_SRC = 'web/src';
-const PATH_WEB_DIR_SRC_APP = 'web/src/App';
-const PATH_WEB_DIR_SRC_INDEX = 'web/src/index'; // .js|.tsx
-
-const PATH_WEB_DIR_GENERATORS = 'web/generators';
-const PATH_WEB_DIR_CONFIG = 'web/config';
-const PATH_WEB_DIR_CONFIG_WEBPACK = 'web/config/webpack.config.js';
-const PATH_WEB_DIR_CONFIG_POSTCSS = 'web/config/postcss.config.js';
-const PATH_WEB_DIR_CONFIG_STORYBOOK_CONFIG = 'web/config/storybook.config.js';
-const PATH_WEB_DIR_CONFIG_STORYBOOK_PREVIEW = 'web/config/storybook.preview.js';
-const PATH_WEB_DIR_CONFIG_STORYBOOK_MANAGER = 'web/config/storybook.manager.js';
-const PATH_WEB_DIR_DIST = 'web/dist';
+const PATH_WEB_ROUTES = 'src/Routes'; // .js|.tsx
+
+const PATH_WEB_DIR_LAYOUTS = 'src/layouts/';
+const PATH_WEB_DIR_PAGES = 'src/pages/';
+const PATH_WEB_DIR_COMPONENTS = 'src/components';
+const PATH_WEB_DIR_SRC = 'src';
+const PATH_WEB_DIR_SRC_APP = 'src/App';
+const PATH_WEB_DIR_SRC_INDEX = 'src/index'; // .js|.tsx
+
+const PATH_WEB_DIR_GENERATORS = 'generators';
+const PATH_WEB_DIR_CONFIG = 'config';
+const PATH_WEB_DIR_CONFIG_WEBPACK = 'config/webpack.config.js';
+const PATH_WEB_DIR_CONFIG_POSTCSS = 'config/postcss.config.js';
+const PATH_WEB_DIR_CONFIG_STORYBOOK_CONFIG = 'config/storybook.config.js';
+const PATH_WEB_DIR_CONFIG_STORYBOOK_PREVIEW = 'config/storybook.preview.js';
+const PATH_WEB_DIR_CONFIG_STORYBOOK_MANAGER = 'config/storybook.manager.js';
+const PATH_WEB_DIR_DIST = 'dist';
 /**
  * Search the parent directories for the Redwood configuration file.
  */
@@ -118,7 +118,10 @@ const resolveFile = (filePath, extensions = ['.js', '.tsx', '.ts', '.jsx']) => {
 exports.resolveFile = resolveFile;
 
 const getPaths = (BASE_DIR = getBaseDir()) => {
-  const routes = resolveFile(_path.default.join(BASE_DIR, PATH_WEB_ROUTES));
+  const {
+    path: webPath
+  } = (0, _config.getConfig)(getConfigPath(BASE_DIR)).web;
+  const routes = resolveFile(_path.default.join(BASE_DIR, webPath, PATH_WEB_ROUTES));
   const {
     schemaPath
   } = (0, _config.getConfig)(getConfigPath(BASE_DIR)).api;
@@ -156,22 +159,22 @@ const getPaths = (BASE_DIR = getBaseDir()) => {
     },
     web: {
       routes,
-      base: _path.default.join(BASE_DIR, 'web'),
-      pages: _path.default.join(BASE_DIR, PATH_WEB_DIR_PAGES),
-      components: _path.default.join(BASE_DIR, PATH_WEB_DIR_COMPONENTS),
-      layouts: _path.default.join(BASE_DIR, PATH_WEB_DIR_LAYOUTS),
-      src: _path.default.join(BASE_DIR, PATH_WEB_DIR_SRC),
-      generators: _path.default.join(BASE_DIR, PATH_WEB_DIR_GENERATORS),
-      app: resolveFile(_path.default.join(BASE_DIR, PATH_WEB_DIR_SRC_APP)),
-      index: resolveFile(_path.default.join(BASE_DIR, PATH_WEB_DIR_SRC_INDEX)),
-      config: _path.default.join(BASE_DIR, PATH_WEB_DIR_CONFIG),
-      webpack: _path.default.join(BASE_DIR, PATH_WEB_DIR_CONFIG_WEBPACK),
-      postcss: _path.default.join(BASE_DIR, PATH_WEB_DIR_CONFIG_POSTCSS),
-      storybookConfig: _path.default.join(BASE_DIR, PATH_WEB_DIR_CONFIG_STORYBOOK_CONFIG),
-      storybookPreviewConfig: _path.default.join(BASE_DIR, PATH_WEB_DIR_CONFIG_STORYBOOK_PREVIEW),
-      storybookManagerConfig: _path.default.join(BASE_DIR, PATH_WEB_DIR_CONFIG_STORYBOOK_MANAGER),
-      dist: _path.default.join(BASE_DIR, PATH_WEB_DIR_DIST),
-      types: _path.default.join(BASE_DIR, 'web/types')
+      base: _path.default.join(BASE_DIR, webPath),
+      pages: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_PAGES),
+      components: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_COMPONENTS),
+      layouts: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_LAYOUTS),
+      src: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_SRC),
+      generators: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_GENERATORS),
+      app: resolveFile(_path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_SRC_APP)),
+      index: resolveFile(_path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_SRC_INDEX)),
+      config: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_CONFIG),
+      webpack: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_CONFIG_WEBPACK),
+      postcss: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_CONFIG_POSTCSS),
+      storybookConfig: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_CONFIG_STORYBOOK_CONFIG),
+      storybookPreviewConfig: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_CONFIG_STORYBOOK_PREVIEW),
+      storybookManagerConfig: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_CONFIG_STORYBOOK_MANAGER),
+      dist: _path.default.join(BASE_DIR, webPath, PATH_WEB_DIR_DIST),
+      types: _path.default.join(BASE_DIR, webPath, '/types')
     }
   };
 
