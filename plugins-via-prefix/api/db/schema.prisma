datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  Int @id @default(autoincrement())
  email               String @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
}

model CoreOrganization {
  id    Int     @id @default(autoincrement())
  cuid  String  @unique @default(cuid())
  name  String
  updatedAt DateTime @updatedAt

  developments CoreDevelopment[]
}

model CoreDevelopment {
  id    Int     @id @default(autoincrement())
  cuid  String  @unique @default(cuid())
  name  String
  updatedAt DateTime @updatedAt
  organization CoreOrganization @relation(fields: [organizationId], references: [id])
  organizationId Int

  projects CoreProject[]
}

model CoreProject {
  id    Int     @id @default(autoincrement())
  cuid  String  @unique @default(cuid())
  name  String
  updatedAt DateTime @updatedAt
  development CoreDevelopment @relation(fields: [developmentId], references: [id])
  developmentId Int

  units CoreUnit[]
}

model CoreUnit {
  id    Int     @id @default(autoincrement())
  cuid  String  @unique @default(cuid())
  name  String
  updatedAt DateTime @updatedAt
  project CoreProject @relation(fields: [projectId], references: [id])
  projectId Int

  // what are the benefits of moving this to own model?
  // i.e. model CoreUnitViews {
  //        unit
  //        generalInfo CoreUnitExtGeneralInfo?
  //        attachments
  //      }
  generalInfo CoreUnitExtGeneralInfo?

  attachments CoreAttachment[]
}

model CoreUnitExtGeneralInfo {
  id    Int     @id @default(autoincrement())
  updatedAt DateTime @updatedAt
  unit CoreUnit @relation(fields: [unitId], references: [id])
  unitId Int
  model String
  description String
}

model Image {
  id    Int    @id @default(autoincrement())
  title String
  url   String

  attachments ImagesOnCoreAttachment[]
}

model CoreAttachment {
  id    Int     @id @default(autoincrement())
  updatedAt DateTime @updatedAt
  targetModel String

  images ImagesOnCoreAttachment[]

  unit CoreUnit @relation(fields: [unitId], references: [id])
  unitId Int

  // add more possible targets here
}

model ImagesOnCoreAttachment {
  id    Int    @id @default(autoincrement())
  attachmentId Int
  attachment CoreAttachment @relation(fields: [attachmentId], references: [id])
  imageId Int
  image Image @relation(fields: [imageId], references: [id])
}
